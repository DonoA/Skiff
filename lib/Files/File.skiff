native import "./skiff_file.h";

native def openFd(String filename) -> Int;
native def closeFd(Int desc);
native def readToBuffer(Int fd, List<Byte> buffer) -> Int;
native def decodeBytes(List<Byte> buffer, Int len) -> String;

class File {
    String fileName;
    private Int fileDesc;
    private Bool isOpen;
    private List<Byte> buffer;
    
    def File(String fileName) {
        this.fileName = fileName;
        this.isOpen = false;
        this.buffer = new List<Byte>(4096);
    }

    def File(Int fd) {
        this.fileName = "";
        this.fileDesc = fd;
        this.isOpen = true;
        this.buffer = new List<Byte>(4096);
    }

    def readAll() -> String {
        this.open();
        let Int read = 0;
        // loop {
        //     read = readToBuffer(fileDesc, buffer);
        //     if(read < 4096) {
        //         break;
        //     }
        // }
        read = readToBuffer(fileDesc, buffer);
        return decodeBytes(buffer, read);
    }

    private def open() {
        if(this.isOpen) {
            return;
        }

        this.fileDesc = openFd(this.fileName);
        this.isOpen = true;
    }
}