{
    "Statement": {
        "fields": {}
    },
    "Expression": {
        "extends": "Statement",
        "fields": {}
    },
    "Type": {
        "fields": {
            "name": "Statement",
            "arraySize": "Integer",
            "genericTypes": "List<Type>"
        }
    },
    "GenericType": {
        "fields": {
            "name": "String",
            "reqExtend": "List<Type>"
        }
    },
    "BlockStatement": {
        "extends": "Statement",
        "fields": {
            "body": {
                "type": "List<Statement>",
                "bigPrint": true
            }
        }
    },
    "FunctionDef": {
        "extends": "BlockStatement(body)",
        "fields": {
            "genericTypes": "List<GenericType>",
            "returns": "Type",
            "name": "String",
            "args": "List<FunctionParam>",
            "body": {
                "type": "List<Statement>",
                "bigPrint": true
            }
        }
    },
    "AnonFunctionDef": {
        "extends": "BlockStatement(body)",
        "fields": {
            "returns": "Type",
            "name": "String",
            "args": "List<FunctionParam>",
            "body": {
                "type": "List<Statement>",
                "bigPrint": true
            }
        }
    },
    "ClassDef": {
        "extends": "BlockStatement(body)",
        "fields": {
            "name": "String",
            "genericTypes": "List<GenericType>",
            "extendClasses": "List<Type>",
            "body": {
                "type": "List<Statement>",
                "bigPrint": true
            }
        }
    },
    "FunctionParam": {
        "fields": {
            "type": "Type",
            "name": "String"
        }
    },
    "IfBlock": {
        "extends": "BlockStatement(body)",
        "fields": {
            "condition": "Statement",
            "body": {
                "type": "List<Statement>",
                "bigPrint": true
            },
            "elseBlock": {
                "type": "ElseBlock",
                "lazy": true
            }
        }
    },
    "ElseBlock": {
        "extends": "Statement()",
        "fields": { }
    },
    "ElseIfBlock": {
        "extends": "ElseBlock()",
        "fields": {
            "on": "IfBlock",
            "elseBlock": {
                "type": "ElseBlock",
                "lazy": true
            }
        }
    },
    "ElseAlwaysBlock": {
        "extends": "ElseBlock()",
        "fields": {
            "body": {
                "type": "List<Statement>",
                "bigPrint": true
            }
        }
    },
    "WhileBlock": {
        "extends": "BlockStatement(body)",
        "fields": {
            "condition": "Statement",
            "body": {
                "type": "List<Statement>",
                "bigPrint": true
            }
        }
    },
    "LoopBlock": {
        "extends": "BlockStatement(body)",
        "fields": {
            "body": {
                "type": "List<Statement>",
                "bigPrint": true
            }
        }
    },
    "ForBlock": {
        "extends": "BlockStatement(body)",
        "fields": {
            "start": "Statement",
            "condition": "Statement",
            "step": "Statement",
            "body": {
                "type": "List<Statement>",
                "bigPrint": true
            }
        }
    },
    "ForIterBlock": {
        "extends": "BlockStatement(body)",
        "fields": {
            "item": "Statement",
            "list": "Statement",
            "body": {
                "type": "List<Statement>",
                "bigPrint": true
            }
        }
    },
    "MatchBlock": {
        "extends": "BlockStatement(body)",
        "fields": {
            "on": "Statement",
            "body": {
                "type": "List<Statement>",
                "bigPrint": true
            }
        }
    },
    "SwitchBlock": {
        "extends": "BlockStatement(body)",
        "fields": {
            "on": "Statement",
            "body": {
                "type": "List<Statement>",
                "bigPrint": true
            }
        }
    },
    "CaseStatement": {
        "extends": "Expression",
        "fields": {
            "on": "Statement"
        }
    },
    "TryBlock": {
        "extends": "BlockStatement(body)",
        "fields": {
            "body": {
                "type": "List<Statement>",
                "bigPrint": true
            }
        }
    },
    "CatchBlock": {
        "extends": "BlockStatement(body)",
        "fields": {
            "ex": "Statement",
            "body": {
                "type": "List<Statement>",
                "bigPrint": true
            }
        }
    },
    "FinallyBlock": {
        "extends": "BlockStatement(body)",
        "fields": {
            "body": {
                "type": "List<Statement>",
                "bigPrint": true
            }
        }
    },
    "FunctionCall": {
        "extends": "Expression",
        "fields": {
            "name": "String",
            "args": "List<Statement>",
            "genericTypes": "List<Type>"
        }
    },
    "Parened": {
        "extends": "Expression",
        "fields": {
            "sub": "Statement"
        }
    },
    "Dotted": {
        "extends": "Expression",
        "fields": {
            "left": "Statement",
            "right": "Statement"
        }
    },
    "Arrowed": {
        "extends": "Expression",
        "fields": {
            "left": "Statement",
            "right": "Statement"
        }
    },
    "Return": {
        "extends": "Expression",
        "fields": {
            "value": "Statement"
        }
    },
    "New": {
        "extends": "Expression",
        "fields": {
            "type": "Statement",
            "argz": "List<Statement>"
        }
    },
    "ThrowStatement": {
        "extends": "Expression",
        "fields": {
            "value": "Statement"
        }
    },
    "ImportStatement": {
        "extends": "Expression",
        "fields": {
            "type": "ImportType",
            "value": "String"
        }
    },
    "MathStatement": {
        "extends": "Expression",
        "fields": {
            "left": "Statement",
            "op": "MathOp",
            "right": "Statement"
        }
    },
    "MathAssign": {
        "extends": "Expression",
        "fields": {
            "left": "Statement",
            "op": "MathOp",
            "right": "Statement"
        }
    },
    "MathSelfMod": {
        "extends": "Expression",
        "fields": {
            "left": "Statement",
            "op": "MathOp"
        }
    },
    "Subscript": {
        "extends": "Expression",
        "fields": {
            "left": "Statement",
            "sub": "Statement"
        }
    },
    "Compare": {
        "extends": "Expression",
        "fields": {
            "left": "Statement",
            "op": "CompareOp",
            "right": "Statement"
        }
    },
    "BoolCombine": {
        "extends": "Expression",
        "fields": {
            "left": "Statement",
            "op": "BoolOp",
            "right": "Statement"
        }
    },
    "Assign": {
        "extends": "Expression",
        "fields": {
            "name": "Statement",
            "value": "Statement"
        }
    },
    "Declare": {
        "extends": "Statement",
        "fields": {
            "type": "Type",
            "name": "String"
        }
    },
    "DeclareAssign": {
        "extends": "Statement",
        "fields": {
            "type": "Type",
            "name": "String",
            "value": "Statement"
        }
    },
    "NumberLiteral": {
        "extends": "Expression",
        "fields": {
            "value": "Double"
        }
    },
    "StringLiteral": {
        "extends": "Expression",
        "fields": {
            "value": "String"
        },
        "literal": true
    },
    "SequenceLiteral": {
        "extends": "Expression",
        "fields": {
            "value": "String"
        },
        "literal": true
    },
    "BooleanLiteral": {
        "extends": "Expression",
        "fields": {
            "value": "Boolean"
        },
        "literal": true
    },
    "RegexLiteral": {
        "extends": "Expression",
        "fields": {
            "pattern": "String",
            "flags": "String"
        },
        "literal": true
    },
    "Variable": {
        "extends": "Expression",
        "fields": {
            "name": "String"
        }
    }
}